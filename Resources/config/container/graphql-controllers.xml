<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
                               http://symfony.com/schema/dic/services/services-1.0.xsd"
>

    <services>
        <defaults autowire="true" autoconfigure="true" public="false" />

        <service id="TheCodingMachine\GraphQL\Controllers\Schema" class="TheCodingMachine\GraphQL\Controllers\Schema">
        </service>

        <service id="GraphQL\Type\Schema" alias="TheCodingMachine\GraphQL\Controllers\Schema" />

        <service id="TheCodingMachine\GraphQL\Controllers\AggregateQueryProvider" class="TheCodingMachine\GraphQL\Controllers\AggregateQueryProvider">
            <argument type="tagged" tag="graphql.queryprovider" />
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\QueryProviderInterface" alias="TheCodingMachine\GraphQL\Controllers\AggregateQueryProvider" />

        <service id="TheCodingMachine\GraphQL\Controllers\ControllerQueryProviderFactory" class="TheCodingMachine\GraphQL\Controllers\ControllerQueryProviderFactory" public="true">
            <argument type="service" key="$registry" id="service_container" />
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\AnnotationReader" class="TheCodingMachine\GraphQL\Controllers\AnnotationReader" />

        <service id="TheCodingMachine\GraphQL\Controllers\Hydrators\FactoryHydrator" class="TheCodingMachine\GraphQL\Controllers\Hydrators\FactoryHydrator" />

        <service id="TheCodingMachine\GraphQL\Controllers\Hydrators\HydratorInterface" alias="TheCodingMachine\GraphQL\Controllers\Hydrators\FactoryHydrator" />

        <service id="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthenticationService" class="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthenticationService">
            <argument type="service" id="security.token_storage" on-invalid="null" />
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\Security\AuthenticationServiceInterface" alias="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthenticationService" />

        <service id="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthorizationService" class="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthorizationService">
            <argument type="service" id="security.authorization_checker" on-invalid="null" />
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\Security\AuthorizationServiceInterface" alias="TheCodingMachine\GraphQL\Controllers\Bundle\Security\AuthorizationService" />

        <service id="TheCodingMachine\GraphQL\Controllers\Mappers\RecursiveTypeMapper" class="TheCodingMachine\GraphQL\Controllers\Mappers\RecursiveTypeMapper" public="true" />

        <service id="TheCodingMachine\GraphQL\Controllers\Mappers\RecursiveTypeMapperInterface" alias="TheCodingMachine\GraphQL\Controllers\Mappers\RecursiveTypeMapper" public="true" />

        <service id="TheCodingMachine\GraphQL\Controllers\Mappers\CompositeTypeMapper" class="TheCodingMachine\GraphQL\Controllers\Mappers\CompositeTypeMapper">
            <argument type="tagged" tag="graphql.type_mapper" />
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\Mappers\TypeMapperInterface" alias="TheCodingMachine\GraphQL\Controllers\Mappers\CompositeTypeMapper" />

        <service id="TheCodingMachine\GraphQL\Controllers\TypeGenerator" class="TheCodingMachine\GraphQL\Controllers\TypeGenerator" public="true" />


        <service id="TheCodingMachine\GraphQL\Controllers\Bundle\EventListeners\RequestHandler" class="TheCodingMachine\GraphQL\Controllers\Bundle\EventListeners\RequestHandler">
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="GraphQL\Server\StandardServer" class="GraphQL\Server\StandardServer">
            <argument type="service" id="GraphQL\Server\ServerConfig" />
        </service>

        <service id="GraphQL\Server\ServerConfig" class="GraphQL\Server\ServerConfig">
            <call method="setSchema">
                <argument type="service" id="TheCodingMachine\GraphQL\Controllers\Schema"/>
            </call>
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\Bundle\Mappers\ContainerFetcherTypeMapper" class="TheCodingMachine\GraphQL\Controllers\Bundle\Mappers\ContainerFetcherTypeMapper">
            <argument type="service" id="service_container" />
            <argument type="collection" />
            <argument type="collection" />
            <argument type="collection" />

            <tag name="graphql.type_mapper"/>
        </service>

        <service id="TheCodingMachine\GraphQL\Controllers\Reflection\CachedDocBlockFactory" class="TheCodingMachine\GraphQL\Controllers\Reflection\CachedDocBlockFactory" />

        <service id="TheCodingMachine\GraphQL\Controllers\NamingStrategy" class="TheCodingMachine\GraphQL\Controllers\NamingStrategy" />

        <service id="TheCodingMachine\GraphQL\Controllers\NamingStrategyInterface" alias="TheCodingMachine\GraphQL\Controllers\NamingStrategy" />

    </services>

</container>